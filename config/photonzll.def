#include "MitCommon/DataFormats/interface/Types.h"
#include "TVector2.h"

[Particle:MAX=256]
pt/F
eta/F
phi/F
virtual mithep::FourVectorM p4() const { return mithep::FourVectorM(pt, eta, phi, 0.); }

[ParticleM:Particle]
mass/F
mithep::FourVectorM p4() const { return mithep::FourVectorM(pt, eta, phi, mass); }

[Jet:ParticleM]

[Met:SINGLE]
met/F
phi/F
sumEt/F
TVector2 v() const { TVector2 vec; vec.SetMagPhi(met, phi); return vec; }

[Photon:Particle]
chIso/F
nhIso/F
phIso/F
sieie/F
hOverE/F
pixelVeto/O
csafeVeto/O
isLoose/O
isMedium/O
isTight/O

[ZCand:SINGLE]
pt0/F
eta0/F
phi0/F
pt1/F
eta1/F
phi1/F
mithep::FourVectorM pMu(UInt_t iM) const { if (iM == 0) return mithep::FourVectorM(pt0, eta0, phi0, 0.106); else return mithep::FourVectorM(pt1, eta1, phi1, 0.106); }
mithep::FourVectorM pZ() const { return pMu(0) + pMu(1); }

{Event}
run/i
lumi/i
event/i
weight/D
rho/D
genHt/F
genZpt/F
jets/JetCollection
photons/PhotonCollection
rawMet/Met
t1Met/Met
t1NoCHSMet/Met
eta30Met/Met
eta30T1Met/Met
eta30T1NoCHSMet/Met
chMet/Met
nhMet/Met
neMet/Met
chGt30Met/Met
nhGt30Met/Met
neGt30Met/Met
z/ZCand

{Weight}
run/i
lumi/i
event/i
weight/D
rho/D
